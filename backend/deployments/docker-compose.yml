services:
  # Redis service optimized for Raspberry Pi 5
  redis:
    image: redis:8.0.2-alpine3.21
    container_name: vidtogallery-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # Optimized Redis configuration for RPi5
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    security_opt:
      - no-new-privileges:true

  # Main application optimized for Raspberry Pi 5
  app:
    build:
      context: ../
      dockerfile: deployments/Dockerfile
      platforms:
        - linux/arm64
    image: vidtogallery:arm64
    container_name: vidtogallery-app
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    env_file:
      - ../.env
    environment:
      - REDIS_URL=redis://redis:6379
      - GOMAXPROCS=4  # Optimize for RPi5's 4 cores
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--timeout=5", "http://localhost:8080/health"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '3.0'  # Leave 1 core for system
        reservations:
          memory: 512M
          cpus: '1.0'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/vidtogallery/redis_data

networks:
  default:
    name: vidtogallery-network
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
    ipam:
      config:
        - subnet: 172.20.0.0/16
