services:
  # Redis service optimized for production
  redis:
    image: redis:8.0.2-alpine3.21
    container_name: vidtogallery-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    networks:
      - vidtogallery-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: deployments/Dockerfile
      platforms:
        - linux/arm64
    image: vidtogallery-backend:latest
    container_name: vidtogallery-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--timeout=5", "http://localhost:9000/health"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    networks:
      - vidtogallery-network

  # Frontend PWA service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
    image: vidtogallery-frontend:latest
    container_name: vidtogallery-frontend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - TZ=America/Guayaquil  # Adjust to your timezone
    depends_on:
      backend:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=128m,uid=1001,gid=1001
      - /var/cache/nginx:noexec,nosuid,size=64m,uid=1001,gid=1001
      - /var/log/nginx:noexec,nosuid,size=32m,uid=1001,gid=1001
      - /var/run:noexec,nosuid,size=16m,uid=1001,gid=1001
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vidtogallery-network

volumes:
  redis_data:
    driver: local

networks:
  vidtogallery-network:
    external: true
